name: Deploy

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: environment

jobs:
  deploy:
    name: Deploy ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: gcp-auth
        name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          create_credentials_file: true
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - name: Save service account key to variable
        id: save-key
        run: echo "::set-output name=key::$(cat ::add-mask::${{ steps.gcp-auth.outputs.credentials_file_path }})"

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: gcr.io
          username: _json_key
          password: ::add-mask::${{ steps.save-key.outputs.key }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: gcr.io/${{ steps.gcp-auth.outputs.project_id }}/${{ vars.GCP_ARTIFACT_NAME }}
          tags: |
            ${{ vars.GCP_ARTIFACT_TAG }}
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Restart VM
        run: gcloud compute instances reset ${{ vars.GCP_COMPUTE_VM_NAME }} --zone=${{ vars.GCP_PROJECT_ZONE }}
